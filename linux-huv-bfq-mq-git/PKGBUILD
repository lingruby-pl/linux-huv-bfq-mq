# Maintainer: Jacek Bienias <sp7ezd@gmail.com>
# Contributor: Piotr Gorski <lucjan.lucjanov@gmail.com>
# Contributor: Tobias Powalowski <tpowa@archlinux.org>
# Contributor: Thomas Baechler <thomas@archlinux.org>

### BUILD OPTIONS
# Set these variables to ANYTHING that is not null to enable them

### Use tentative patches from https://groups.google.com/forum/#!forum/bfq-iosched
### Thx to Tom 'monotykamary' Nguyen
_use_tentative_patches=y

### Use patches from https://github.com/pfactum/pf-kernel/
_use_pfkernel_patch=y

### Use patches from http://marc.info/?l=linux-block&m=150151989915776&w=2
_use_blk_mq_patches=y

### Tweak kernel options prior to a build via nconfig
_makenconfig=

### Tweak kernel options prior to a build via menuconfig
_makemenuconfig=

### Tweak kernel options prior to a build via xconfig
_makexconfig=

### Tweak kernel options prior to a build via gconfig
_makegconfig=

### Running with a 100 HZ tick rate 
_100_HZ_ticks=y

### Setting GCC Flags for CONFIG_MHASWELL
_gcc_haswell=y

### Set performance governor as default
_per_gov=y

# NUMA is optimized for multi-socket motherboards.
# A single multi-core CPU actually runs slower with NUMA enabled.
# See, https://bugs.archlinux.org/task/31187
_NUMAdisable=y

# Compile ONLY probed modules
# As of mainline 2.6.32, running with this option will only build the modules
# that you currently have probed in your system VASTLY reducing the number of
# modules built and the build time to do it.
#
# WARNING - ALL modules must be probed BEFORE you begin making the pkg!
#
# To keep track of which modules are needed for your specific system/hardware,
# give module_db script a try: https://aur.archlinux.org/packages/modprobed-db
# This PKGBUILD will call it directly to probe all the modules you have logged!
#
# More at this wiki page ---> https://wiki.archlinux.org/index.php/Modprobed_db
_localmodcfg=

# Use the current kernel's .config file
# Enabling this option will use the .config of the RUNNING kernel rather than
# the ARCH defaults. Useful when the package gets updated and you already went
# through the trouble of customizing your config options.  NOT recommended when
# a new kernel is released, but again, convenient for package bumps.
_use_current=

### Disable Deadline I/O scheduler
_deadline_disable=y

### Disable CFQ I/O scheduler
_CFQ_disable=y

### Disable Kyber I/O scheduler
_kyber_disable=y

### Do not edit below this line unless you know what you're doing

pkgbase=linux-huv-bfq-mq-git
# pkgname=('linux-huv-bfq-mq-git-kernel' 'linux-huv-bfq-mq-git-headers' 'linux-huv-bfq-mq-git-docs')
_srcname=linux-stable
pkgver=4.12.9.r0.ge0e7ae96b723
pkgrel=1
arch=('x86_64')
url="https://github.com/Algodev-github/bfq-mq/"
license=('GPL2')
options=('!strip')
makedepends=('kmod' 'inetutils' 'bc' 'libelf')
_mergepath="4.12.9"
_lucjanpath="https://gitlab.com/sirlucjan/kernel-patches/raw/master/4.12"
_gcc_patch="enable_additional_cpu_optimizations_for_gcc_v4.9+_kernel_v3.15+.patch"

source=('git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git#branch=linux-4.12.y'
        'bonding-require-speed-duplex-only-for-802.3ad-alb-an.patch'
        'bonding-ratelimit-failed-speed-duplex-update-warning.patch'
 
        ### BFQ-MQ ###
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/4.12-bfq-mq-20170810.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0001-Merge-tag-uuid-for-4.13-of-uuid.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0002-Merge-branch-for-4.13-block-of-linux-block.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0003-Merge-branch-irq-core-for-linus.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0004-Merge-branch-for-linus-of-s390.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0005-Merge-tag-for-linus-v4.13-2-of-linux-block.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0006-Merge-branch-for-linus-of-linux-block_1.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0007-Merge-branch-for-linus-of-linux-block_2.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0008-Merge-tag-uuid-for-4.13-2-of-uuid.patch"
        "https://gitlab.com/tom81094/custom-patches/raw/master/bfq-mq/merges/${_mergepath}/0009-Merge-branch-for-linus-of-linux-block_3.patch"
        "${_lucjanpath}/blk-mq-v2/0050-blk-mq-sched-fix-scheduler-bad-performance.patch"
        "${_lucjanpath}/blk-mq-v2/0051-blk-mq-sbitmap-introduce__sbitmap_for_each_set().patch"
        "${_lucjanpath}/blk-mq-v2/0052-blk-mq-introduce-blk_mq_dispatch_rq_from_ctx().patch"
        "${_lucjanpath}/blk-mq-v2/0053-blk-mq-sched-move-actual-dispatching-into-one-helper.patch"
        "${_lucjanpath}/blk-mq-v2/0054-blk-mq-sched-improve-dispatching-from-sw-queue.patch"
        "${_lucjanpath}/blk-mq-v2/0055-blk-mq-sched-don't-dequeue-request-until-all-in-dispatch-are-flushed.patch"
        "${_lucjanpath}/blk-mq-v2/0056-blk-mq-sched-introduce-blk_mq_sched_queue_depth().patch"
        "${_lucjanpath}/blk-mq-v2/0057-blk-mq-sched-use-q->queue_depth-as-hint-for-q->nr_requests.patch"
        "${_lucjanpath}/blk-mq-v2/0058-blk-mq-introduce-BLK_MQ_F_SHARED_DEPTH.patch"
        "${_lucjanpath}/blk-mq-v2/0059-blk-mq-sched-introduce-helpers-for-query-change-busy-state.patch"
        "${_lucjanpath}/blk-mq-v2/0060-blk-mq-introduce-helpers-for-operating->dispatch-list.patch"
        "${_lucjanpath}/blk-mq-v2/0061-blk-mq-introduce-pointers-to-dispatch-lock&list.patch"
        "${_lucjanpath}/blk-mq-v2/0062-blk-mq-pass-request_queue-to-several-helpers-of-operating-BUSY.patch"
        "${_lucjanpath}/blk-mq-v2/0063-blk-mq-sched-improve-IO-scheduling-on-SCSI-devcie.patch"
        "${_lucjanpath}/blk-mq-v2/0064-blk-mq-block-introduce-rqhash-helpers.patch"
        "${_lucjanpath}/blk-mq-v2/0065-blk-mq-block-move-actual-bio-merge-code-into__elv_merge.patch"
        "${_lucjanpath}/blk-mq-v2/0066-blk-mq-block-add-check-on-elevator-for-supporting-bio-merge-via-hashtable-from-blk-mq-sw.patch"
        "${_lucjanpath}/blk-mq-v2/0067-blk-mq-block-introduce-last_merge-and-hash-to-blk_mq_ctx.patch"
        "${_lucjanpath}/blk-mq-v2/0068-blk-mq-sched-refactor-blk_mq_sched_try_merge().patch"
        "${_lucjanpath}/blk-mq-v2/0069-blk-mq-improve-bio-merge-from-blk-mq-sw-queue.patch"
        "${_lucjanpath}/0100-Check-presence-on-tree-of-every-entity-after-every-a.patch"
        "${_lucjanpath}/0200-BFQ-MQ-bugfix-from-pfkernel-1.patch"
        "${_lucjanpath}/0200-BFQ-MQ-bugfix-from-pfkernel-2.patch"
        "${_lucjanpath}/0200-BFQ-MQ-bugfix-from-pfkernel-3.patch"
        "http://repo-ck.com/source/gcc_patch/${_gcc_patch}.gz"

         # the main kernel config files
        'config.x86_64'
         # pacman hook for initramfs regeneration
        '90-linux.hook'
         # standard config files for mkinitcpio ramdisk
        'linux.preset'

	### UKSM ###
        "http://kerneldedup.org/download/uksm/0.1.2.6/uksm-0.1.2.6-for-v4.12.patch"
	### VRQ ###
        "https://bitbucket.org/alfredchen/linux-gc/downloads/v4.12_vrq096f.patch"
	### MuQSS ###
        # "http://ck.kolivas.org/patches/muqss/4.0/4.12/4.12-sched-MuQSS_157.patch"
        )

_kernelname=${pkgbase#linux}
        
pkgver() {
  cd "${_srcname}"

  git describe --long | sed -E 's/^v//;s/([^-]*-g)/r\1/;s/-/./g;s/\.rc/rc/'
} 

prepare() {
    cd "${srcdir}/${_srcname}"
   
    ### https://bugzilla.kernel.org/show_bug.cgi?id=196547
        msg "Fix some bugs"
        patch -Np1 -i ../bonding-ratelimit-failed-speed-duplex-update-warning.patch
        patch -Np1 -i ../bonding-require-speed-duplex-only-for-802.3ad-alb-an.patch
   
    ### Patch source with BFQ-MQ
        msg "Fix naming schema in BFQ-MQ patch"
        sed -i -e "s|PATCHLEVEL = 13|PATCHLEVEL = 12|g" \
            -i -e "s|SUBLEVEL = 0|SUBLEVEL = 9|g" \
            -i -e "s|EXTRAVERSION = -rc3|EXTRAVERSION =|g" \
            -i -e "s|EXTRAVERSION = -bfq-rc3|EXTRAVERSION =|g" \
            -i -e "s|EXTRAVERSION =-bfq-mq|EXTRAVERSION =|g" "${srcdir}/4.12-bfq-mq-20170810.patch"
        msg "Patching source with BFQ-MQ patches"
        patch -Np1 -i "${srcdir}/4.12-bfq-mq-20170810.patch"
        msg "Patching source with merged patches"
        for p in "${srcdir}"/*-Merge*.patch; do
        msg " $p"
        patch -Np1 -i "$p"
        done

    ### Patches related to BUG_ON(entity->tree && entity->tree != &st->active) in __bfq_requeue_entity();
        if [ -n "$_use_tentative_patches" ]; then
        msg "Apply tentative patches"
        for p in "${srcdir}"/0100*.patch*; do 
        msg " $p"
        patch -Np1 -i "$p"; done
        fi

    ### Patches from https://github.com/pfactum/pf-kernel/
        if [ -n "$_use_pfkernel_patch" ]; then
        msg "Apply pfkernel patches"
        for p in "${srcdir}"/0200*.patch*; do 
        msg " $p" 
        patch -Np1 -i "$p"; done
        fi           
    ### Patches from http://marc.info/?l=linux-block&m=150151989915776&w=2
        if [ -n "$_use_blk_mq_patches" ]; then
        msg "Apply blk-mq patches"
        for p in "${srcdir}"/*-blk-mq*.patch*; do 
        msg " $p" 
        patch -Np1 -i "$p"; done
        fi 

    ### UKSM ###
	patch -Np1 -i "${srcdir}/uksm-0.1.2.6-for-v4.12.patch"

    ### VRQ ###
	patch -Np1 -i "${srcdir}/v4.12_vrq096f.patch"

    ### MuQSS ###
	# patch -Np1 -i "${srcdir}/4.12-sched-MuQSS_157.patch"

    ### Patch source to enable more gcc CPU optimizatons via the make nconfig
        msg "Patching source with gcc patch to enable more cpus types"
	patch -Np1 -i "${srcdir}/${_gcc_patch}"

	
    ### Clean tree and copy ARCH config over
	msg "Running make mrproper to clean source tree"
	make mrproper

	cat "${srcdir}/config.${CARCH}" > ./.config
        
    ### Optionally use running kernel's config
	# code originally by nous; http://aur.archlinux.org/packages.php?ID=40191
	if [ -n "$_use_current" ]; then
		if [[ -s /proc/config.gz ]]; then
			msg "Extracting config from /proc/config.gz..."
			# modprobe configs
			zcat /proc/config.gz > ./.config
		else
			warning "You kernel was not compiled with IKCONFIG_PROC!"
			warning "You cannot read the current config!"
			warning "Aborting!"
			exit
		fi
	fi    
        
    ### Set GCC flags
        if [ -n "$_gcc_haswell" ]; then
                msg "Setting GCC flags for Intel Haswell CPU..."
                sed -i -e s'/CONFIG_GENERIC_CPU=y/# CONFIG_GENERIC_CPU is not set/' ./.config
                sed -i -e s'/# CONFIG_MHASWELL is not set/CONFIG_MHASWELL=y/' ./.config
        fi  
        
    ### Set performance governor
        if [ -n "$_per_gov" ]; then
                msg "Setting performance governor.."
                sed -i -e s'/CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL=y/# CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set/' ./.config
                sed -i -e s'/# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set/CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y/' ./.config
                msg "Disabling uneeded governors..."
                sed -i -e s'/CONFIG_CPU_FREQ_GOV_ONDEMAND=m/# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set/' ./.config
                sed -i -e s'/CONFIG_CPU_FREQ_GOV_CONSERVATIVE=m/# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set/' ./.config
                sed -i -e s'/CONFIG_CPU_FREQ_GOV_USERSPACE=m/# CONFIG_CPU_FREQ_GOV_USERSPACE is not set/' ./.config
                sed -i -e s'/CONFIG_CPU_FREQ_GOV_SCHEDUTIL=y/# CONFIG_CPU_FREQ_GOV_SCHEDUTIL is not set/' ./.config
        fi 
        
    ### Optionally set tickrate to 100 
	if [ -n "$_100_HZ_ticks" ]; then
		msg "Setting tick rate to 100..."
		sed -i -e 's/^CONFIG_HZ_1000=y/# CONFIG_HZ_1000 is not set/' \
			-i -e 's/^# CONFIG_HZ_100 is not set/CONFIG_HZ_100=y/' \
			-i -e 's/^CONFIG_HZ=1000/CONFIG_HZ=100/' .config
	fi
	
	### Disable Deadline I/O scheduler
	if [ -n "$_deadline_disable" ]; then
		msg "Disabling Deadline I/O scheduler..."
		sed -i -e s'/CONFIG_IOSCHED_DEADLINE=y/# CONFIG_IOSCHED_DEADLINE is not set/' ./.config
		sed -i -e s'/CONFIG_MQ_IOSCHED_DEADLINE=y/# CONFIG_MQ_IOSCHED_DEADLINE is not set/' ./.config
	fi
	
	### Disable CFQ I/O scheduler
	if [ -n "$_CFQ_disable" ]; then
		msg "Disabling CFQ I/O scheduler..."
		sed -i -e s'/CONFIG_IOSCHED_CFQ=y/# CONFIG_IOSCHED_CFQ is not set/' ./.config
		sed -i -e s'/CONFIG_CFQ_GROUP_IOSCHED=y/# CONFIG_CFQ_GROUP_IOSCHED is not set/' ./.config	
	fi
	
	### Disable Kyber I/O scheduler
	if [ -n "$_kyber_disable" ]; then
		msg "Disabling Kyber I/O scheduler..."
		sed -i -e s'/CONFIG_MQ_IOSCHED_KYBER=y/# CONFIG_MQ_IOSCHED_KYBER is not set/' ./.config
	fi

	if [ "${_kernelname}" != "" ]; then
		sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
		sed -i "s|CONFIG_LOCALVERSION_AUTO=.*|CONFIG_LOCALVERSION_AUTO=n|" ./.config
	fi
	
	### Optionally disable NUMA since >99% of users have mono-socket systems.
	# For more, see: https://bugs.archlinux.org/task/31187
	if [ -n "$_NUMAdisable" ]; then
		if [ "${CARCH}" = "x86_64" ]; then
			msg "Disabling NUMA from kernel config..."
			sed -i -e 's/CONFIG_NUMA=y/# CONFIG_NUMA is not set/' \
				-i -e '/CONFIG_AMD_NUMA=y/d' \
				-i -e '/CONFIG_X86_64_ACPI_NUMA=y/d' \
				-i -e '/CONFIG_NODES_SPAN_OTHER_NODES=y/d' \
				-i -e '/# CONFIG_NUMA_EMU is not set/d' \
				-i -e '/CONFIG_NODES_SHIFT=6/d' \
				-i -e '/CONFIG_NEED_MULTIPLE_NODES=y/d' \
				-i -e '/# CONFIG_MOVABLE_NODE is not set/d' \
				-i -e '/CONFIG_USE_PERCPU_NUMA_NODE_ID=y/d' \
				-i -e '/CONFIG_ACPI_NUMA=y/d' ./.config
		fi
	fi

	### Set extraversion to pkgrel
        sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile

	### Don't run depmod on 'make install'. We'll do this ourselves in packaging
	sed -i '2iexit 0' scripts/depmod.sh

	### Get kernel version
	msg "Running make prepare for you to enable patched options of your choosing"
	make prepare

	### Optionally load needed modules for the make localmodconfig
	# See https://aur.archlinux.org/packages/modprobed-db
		if [ -n "$_localmodcfg" ]; then
		msg "If you have modprobe-db installed, running it in recall mode now"
		if [ -e /usr/bin/modprobed-db ]; then
			[[ -x /usr/bin/sudo ]] || {
                        echo "Cannot call modprobe with sudo. Install sudo and configure it to work with this user."
                        exit 1; }
			sudo /usr/bin/modprobed-db recall
		fi
		msg "Running Steven Rostedt's make localmodconfig now"
		make localmodconfig
	fi

	### Running make nconfig
	
	[[ -z "$_makenconfig" ]] ||  make nconfig
	
	### Running make menuconfig
	
	[[ -z "$_makemenuconfig" ]] || make menuconfig
	
	### Running make xconfig
	
	[[ -z "$_makexconfig" ]] || make xconfig
	
	### Running make gconfig
	
	[[ -z "$_makegconfig" ]] || make gconfig
	
	### Rewrite configuration
	yes "" | make config >/dev/null

	### Save configuration for later reuse
	cat .config > "${startdir}/config.${CARCH}.last"
}

build() {
  cd "${srcdir}/${_srcname}"

  make ${MAKEFLAGS} LOCALVERSION= bzImage modules
}

_package-kernel() {
    pkgdesc='Linux Kernel and modules with the  BFQ-MQ scheduler. Fourth Gen Intel Core i3/i5/i7 optimized.'
    depends=('coreutils' 'linux-firmware' 'mkinitcpio>=0.7')
    optdepends=('crda: to set the correct wireless channels of your country' 'modprobed-db: Keeps track of EVERY kernel module that has ever been probed - useful for those of us who make localmodconfig')
    groups=('linux-huv-bfq-mq-git')
    backup=("etc/mkinitcpio.d/${pkgbase}.preset")
    install=linux.install

    cd "${srcdir}/${_srcname}"

    KARCH=x86

   # get kernel version
   _kernver="$(make LOCALVERSION= kernelrelease)"
   _basekernel=${_kernver%%-*}
   _basekernel=${_basekernel%.*}

    mkdir -p "${pkgdir}"/{lib/modules,lib/firmware,boot}
    make LOCALVERSION= INSTALL_MOD_PATH="${pkgdir}" modules_install
    cp arch/$KARCH/boot/bzImage "${pkgdir}/boot/vmlinuz-${pkgbase}"

    # set correct depmod command for install
    sed -e "s|%PKGBASE%|${pkgbase}|g;s|%KERNVER%|${_kernver}|g" \
    "${startdir}/${install}" > "${startdir}/${install}.pkg"
    true && install=${install}.pkg

    # install mkinitcpio preset file for kernel
    sed "s|%PKGBASE%|${pkgbase}|g" "${srcdir}/linux.preset" |
    install -D -m644 /dev/stdin "${pkgdir}/etc/mkinitcpio.d/${pkgbase}.preset"

    # install pacman hook for initramfs regeneration
    sed "s|%PKGBASE%|${pkgbase}|g" "${srcdir}/90-linux.hook" |
    install -D -m644 /dev/stdin "${pkgdir}/usr/share/libalpm/hooks/90-${pkgbase}.hook"

    # remove build and source links
    rm -f "${pkgdir}"/lib/modules/${_kernver}/{source,build}
    # remove the firmware
    rm -rf "${pkgdir}/lib/firmware"
    # make room for external modules
    ln -s "../extramodules-${_basekernel}${_kernelname:--ARCH}" "${pkgdir}/lib/modules/${_kernver}/extramodules"
    # add real version for building modules and running depmod from post_install/upgrade
    mkdir -p "${pkgdir}/lib/modules/extramodules-${_basekernel}${_kernelname:--ARCH}"
    echo "${_kernver}" > "${pkgdir}/lib/modules/extramodules-${_basekernel}${_kernelname:--ARCH}/version"

    # Now we call depmod...
    depmod -b "${pkgdir}" -F System.map "${_kernver}"

    # move module tree /lib -> /usr/lib
    mkdir -p "${pkgdir}/usr"
    mv "${pkgdir}/lib" "${pkgdir}/usr/"

    # add vmlinux
    install -D -m644 vmlinux "${pkgdir}/usr/lib/modules/${_kernver}/build/vmlinux"
}

_package-headers() {
    pkgdesc='Header files and scripts to build modules for linux-huv-bfq-mq-git. Fourth Gen Intel Core i3/i5/i7 optimized.'
    depends=('linux-huv-bfq-mq-git-kernel')
    groups=('linux-huv-bfq-mq-git')

    install -dm755 "${pkgdir}/usr/lib/modules/${_kernver}"

    cd "${srcdir}/${_srcname}"

    
        install -D -m644 Makefile \
		"${pkgdir}/usr/lib/modules/${_kernver}/build/Makefile"
	install -D -m644 kernel/Makefile \
		"${pkgdir}/usr/lib/modules/${_kernver}/build/kernel/Makefile"
	install -D -m644 .config \
		"${pkgdir}/usr/lib/modules/${_kernver}/build/.config"

	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/include"

	for i in acpi asm-generic config crypto drm generated keys linux math-emu \
		media net pcmcia rdma scsi soc sound trace uapi video xen; do
	cp -a include/${i} "${pkgdir}/usr/lib/modules/${_kernver}/build/include/"
	done

	# copy arch includes for external modules
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/arch/x86"
	cp -a arch/x86/include "${pkgdir}/usr/lib/modules/${_kernver}/build/arch/x86/"

	# copy files necessary for later builds, like nvidia and vmware
	cp Module.symvers "${pkgdir}/usr/lib/modules/${_kernver}/build"
	cp -a scripts "${pkgdir}/usr/lib/modules/${_kernver}/build"

	# fix permissions on scripts dir
	chmod og-w -R "${pkgdir}/usr/lib/modules/${_kernver}/build/scripts"
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/.tmp_versions"

	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/arch/${KARCH}/kernel"

	cp arch/${KARCH}/Makefile "${pkgdir}/usr/lib/modules/${_kernver}/build/arch/${KARCH}/"

	if [ "${CARCH}" = "i686" ]; then
		cp arch/${KARCH}/Makefile_32.cpu "${pkgdir}/usr/lib/modules/${_kernver}/build/arch/${KARCH}/"
	fi

	cp arch/${KARCH}/kernel/asm-offsets.s "${pkgdir}/usr/lib/modules/${_kernver}/build/arch/${KARCH}/kernel/"

	# add docbook makefile
	install -D -m644 Documentation/DocBook/Makefile \
	"${pkgdir}/usr/lib/modules/${_kernver}/build/Documentation/DocBook/Makefile"

	# add dm headers
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/md"
	cp drivers/md/*.h "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/md"

	# add inotify.h
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/include/linux"
	cp include/linux/inotify.h "${pkgdir}/usr/lib/modules/${_kernver}/build/include/linux/"

	# add wireless headers
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/net/mac80211/"
	cp net/mac80211/*.h "${pkgdir}/usr/lib/modules/${_kernver}/build/net/mac80211/"

	# add dvb headers for external modules
	# in reference to:
	# http://bugs.archlinux.org/task/9912
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/dvb-core"
	cp drivers/media/dvb-core/*.h "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/dvb-core/"
	# and...
	# http://bugs.archlinux.org/task/11194
	###
	### DO NOT MERGE OUT THIS IF STATEMENT
	### IT AFFECTS USERS WHO STRIP OUT THE DVB STUFF SO THE OFFICIAL ARCH CODE HAS A CP
	### LINE THAT CAUSES MAKEPKG TO END IN AN ERROR
	###
	if [ -d include/config/dvb/ ]; then
		mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/include/config/dvb/"
		cp include/config/dvb/*.h "${pkgdir}/usr/lib/modules/${_kernver}/build/include/config/dvb/"
	fi

	# add dvb headers for http://mcentral.de/hg/~mrec/em28xx-new
	# in reference to:
	# http://bugs.archlinux.org/task/13146
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/dvb-frontends/"
	cp drivers/media/dvb-frontends/lgdt330x.h "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/dvb-frontends/"
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/i2c/"
	cp drivers/media/i2c/msp3400-driver.h "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/i2c/"

	# add dvb headers
	# in reference to:
	# http://bugs.archlinux.org/task/20402
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/usb/dvb-usb"
	cp drivers/media/usb/dvb-usb/*.h "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/usb/dvb-usb/"
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/dvb-frontends"
	cp drivers/media/dvb-frontends/*.h "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/dvb-frontends/"
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/tuners"
	cp drivers/media/tuners/*.h "${pkgdir}/usr/lib/modules/${_kernver}/build/drivers/media/tuners/"

	# add xfs and shmem for aufs building
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/fs/xfs"
	mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/mm"
	# removed in 3.17 series
	#cp fs/xfs/xfs_sb.h "${pkgdir}/usr/lib/modules/${_kernver}/build/fs/xfs/xfs_sb.h"

	# copy in Kconfig files
	for i in $(find . -name "Kconfig*"); do
		mkdir -p "${pkgdir}"/usr/lib/modules/${_kernver}/build/`echo ${i} | sed 's|/Kconfig.*||'`
		cp ${i} "${pkgdir}/usr/lib/modules/${_kernver}/build/${i}"
	done
	
	# add objtool for external module building and enabled VALIDATION_STACK option
        if [ -f tools/objtool/objtool ];  then
        mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build/tools/objtool"
        cp -a tools/objtool/objtool ${pkgdir}/usr/lib/modules/${_kernver}/build/tools/objtool/ 
        fi

	chown -R root.root "${pkgdir}/usr/lib/modules/${_kernver}/build"
	find "${pkgdir}/usr/lib/modules/${_kernver}/build" -type d -exec chmod 755 {} \;

	# strip scripts directory
	find "${pkgdir}/usr/lib/modules/${_kernver}/build/scripts" -type f -perm -u+w 2>/dev/null | while read binary ; do
	case "$(file -bi "${binary}")" in
	*application/x-sharedlib*) # Libraries (.so)
		/usr/bin/strip ${STRIP_SHARED} "${binary}";;
	*application/x-archive*) # Libraries (.a)
		/usr/bin/strip ${STRIP_STATIC} "${binary}";;
	*application/x-executable*) # Binaries
		/usr/bin/strip ${STRIP_BINARIES} "${binary}";;
	esac
	done
	
	# remove a files already in linux-bfq-haswell-git-docs package
        rm -f "${pkgdir}/usr/lib/modules/${_kernver}/build/Documentation/kbuild/Kconfig.recursion-issue-01"
        rm -f "${pkgdir}/usr/lib/modules/${_kernver}/build/Documentation/kbuild/Kconfig.recursion-issue-02"
        rm -f "${pkgdir}/usr/lib/modules/${_kernver}/build/Documentation/kbuild/Kconfig.select-break"

    # remove unneeded architectures
    rm -rf "${pkgdir}"/usr/lib/modules/${_kernver}/build/arch/{alpha,arm,arm26,arm64,avr32,blackfin,c6x,cris,frv,h8300,hexagon,ia64,m32r,m68k,m68knommu,mips,microblaze,mn10300,openrisc,parisc,powerpc,ppc,s390,score,sh,sh64,sparc,sparc64,tile,unicore32,um,v850,xtensa}
}

_package-docs() {
    pkgdesc='Kernel hackers manual - HTML documentation that comes with the linux-huv-bfq-mq-git kernel. Fourth Gen Intel Core i3/i5/i7 optimized.'
    depends=('linux-huv-bfq-mq-git-kernel')
    groups=('linux-huv-bfq-mq-git')
  
    cd "${srcdir}/${_srcname}"

    mkdir -p "${pkgdir}/usr/lib/modules/${_kernver}/build"
    cp -al Documentation "${pkgdir}/usr/lib/modules/${_kernver}/build"
    find "${pkgdir}" -type f -exec chmod 444 {} \;
    find "${pkgdir}" -type d -exec chmod 755 {} \;

    # remove a file already in linux-huv-bfq-mq-git package
    rm -f "${pkgdir}/usr/lib/modules/${_kernver}/build/Documentation/DocBook/Makefile"
}

pkgname=("${pkgbase}-kernel" "${pkgbase}-headers" "${pkgbase}-docs")
for _p in ${pkgname[@]}; do
  eval "package_${_p}() {
    $(declare -f "_package${_p#${pkgbase}}")
    _package${_p#${pkgbase}}
  }"
done

sha512sums=('SKIP'
            '10622e73ab1c69ba6f36bd73097e21890f9fec9411f1c15df7c379a8800f7f3f2d701a116dc38f2cea1bb58c6305ee57890fe6ff115929d35a578660487fdc6f'
            '9899c8fea07611324fbf96b6af86362986b4e780f7816d1d82a136cae2341283a4b19013ea0e7b562798604d04559e5abd59b6d695b957d1100e4de179059baa'
            'cf7af096d9b7e2ff771020eca825d1df0279741a7b8b2b79b39cfca4b0abef16b09c1f04365bc24337193110d297af9271a502e11dc84b113efcc686fa2d47c0'
            '84b61ac33a620763ed5197cec3d0559bab4666dc90cb04771d8b4a227dd389a9588d67a3e2c4adea4c62d6740a68d78d7b1f40b1a5b243dd3855fa08b50578c8'
            '2a5670cc43acbc630fc0fa3e81c8bb8b338317a8cc834ce64cffe798f6fc73e4afd676a34e4e3610b63e00fa1a7b6ccb5ea165779de193a3b2a8bdf4fefe1b3f'
            '019b07c76a4370b7f0783bcb1824c7aca89ea8434215f28ee1fd1f5d8679a56dcf8579f29b0412f9960d26a62dd9e838c7ca26679764060e13536020cc8ca42b'
            '0924f8aa7bf528715735d7a8457f64f1f5a7526fa903c20bb8b0d76741eeb8f7b68199d4693320980aaf2e56df88988c6bb80cd564703f76883ec206493c932d'
            '85159958742e5d90b8348ea5b8fecc387a6851ffacbd0e20cf43d71b814a206e7fa3bfa9226a4437c431ba61a3fe4287926d9c46fff103d95436e0cb74c442a4'
            '6d8c41043660321dfa5f78935e2331db808ceaea8ef6970222434468445f15ef2b277d47d9ca6a83fabd2e36b5defc95661012af624957229488c1f844cfe246'
            'b434bec13049184869a8b67834cb1d22e549c1be1b97a63482015f13b0a9a8ae0604aa829712e46fa08b76dcfc8cd34daa937a06e0b0e6ec91c750209e143852'
            '12b22ccd3615c4858dec403f7fbfffbe422f3a03969fe3f28b7c2404bdb806f8ae9e6e73ba8ebad960e02735720e3d5ee470cc4c9ae65c8fbab133dadda6834e'
            'c44ae4f98eca39d8ebc68a34616432605d3c9eb788d089639a2dc16b8a7f0080837ae4fbcd87328cb57a9d1bf8c9c04afd027c9d19ee956cdbb86511db17ede2'
            '9d52766005a729b954cd0c376bf60a0992d6b7f22a5c3567a2451a4adba5c8cd1ec29348c24eff8b0f47ba2bb544932ae0873841d6c9805740087f8daecdd4da'
            'd24a6627945c66a29d4084cd4b47f3bf4e0dc666c777314907cfcd295b6c99e066bcf0c2d62f07ce3fb208996778af7049cfc54aa21c1f2ca0fd047fc94633df'
            '5c330ceb8c0f5cb237dc1183180d8df88fe7be0314b6bea70ac5cc7baa898f3a683e936c0d825012925dae3eabfe9fd1f7299f1b697bb2d42d3f544c745c09da'
            '7366186baa55db2ef49b2b62b701679cee56e727d46335c2ca2cfa018c7df577807d02451ff241368afcb8707fa77a40cb487ecb623a02404df7db3b135caa9a'
            'ea811185f0761fc86bf6978ea68a972855a0938c35120fb135cb40638ba6b4d666277074755634399f03a6c563359b9017e0921991c0460b4d31e235a3867f8f'
            '4b5d12cb13ce6313da75d43d4361b57c2dc40569d3d1c3225cd2749860c2946b24d7e06a03fd701450a0a5b5663439a5f3d938be2019cdec014ca86167c16d45'
            'db247af788d4d8acb4021c98dd97f85a09b066ab2ceaef370e915a53ac3c37d68af705bed326ee52e0039f7443dcdac2cf4eb623514448442900764711313b9a'
            '15ac44698d5a34988a2dbba0862c9b60179c8a50607df30e1af8c673610db453069221c18e5474a35db55ab3d3d0c027259b3b08bf91dc270dd0669afb0be40a'
            'e9e08d000a73174783b4b811729566c91f4c43009ba0d26d5191ef604b11496be8cfb6c9a1b12eaffb944c5a8b46851e0a65b48763c4b5dd51f6e1784c21a29a'
            'cda9a16fe44736f7b00c939ef9977df86878b6d67719376533e0c57c78ff0436c09533fa7f5a123ce28203e6c290b6a4a0bcee697822cd8273c7cd9353adfacc'
            '4b3ade4ef9a4d590eb1e0c50efae9d32f9ac3f28760bc07d6b317cd23c7f8242d4233cdda6a03fb9a6c49bbb1f818c3e2181c6e99a3aa3e9b065a66483f762ee'
            'f3862d1341294a057172c76eebe0fcb0ee1646bf984d47e75db5b6ad221a30ba1d469625364576a36216b004f3b6d8fa1a01b54620049236c313e80705c5c359'
            '6a46ea6343044cf85ca88f145c2ac0cae2a30090cea629f0f9b71f93eb98bba3cc338bccc6f485893794b6cdcd4bb6f50a9b7932d088e24e26d359b827dbde67'
            'a6fefa68957be44685bd14a1b0a7439d52031de107f570420b4a9089f6dd02190a8400e91f5cdcc923102067db7aee50aa1b69462663c128f3f123b92cd35a50'
            '66fc657d1fa3cea041070c0c1033d0faaccf2721f03f96b2689d9e2e62c64317ad827c363f0b4b0fd50025d28107f36e17177c9bd8b3bac0dbefd7029967ce77'
            '56e7e6f07610443e9fafd8a616b951e0df9e7533551da9651f4d041e3987cea2bf7360e2871486e165154d2310e283a48a558b7cfb3bd4662d9efc4d7a73ea62'
            '7b64531e5ed2c9b9a9481066f5c1dc9955f3d41e5cfcdc8f93e556f148f51815f5c3a78b01068b95c0e70b6bc7127c281aed3c654f48bea18bacfa6c19507a60'
            'ccf4799c058efb614866e5339d4ceba5899ffedfacc571a669340f8176c15437969cd48811d1a174c7a76b50581c014bcffcdf939c0ce121f768025b727d5242'
            '723fcb5afe5f0327c869ec7e4c23a02de54ca6a056da551badce912e87b4e8539df8697a4778f139cdaca14815987d5a2c77644ccb98db20ce995f3d7997862b'
            '10af442da3e3a13fea8d7f0298a77fee4ad79e72dd478779702f7de502246ec2fe14dedf896d0e283a2f7cb278a225ca0ebe833345b2b9e8597d053d3f1b1b81'
            '0f96fa9ad784709973b32eea82075ceb3e9dc2482df6441a4607612806f069254e63508b1b562279622394e4a1fbebef1b87af8401c0b1210d5d0de9954245c8'
            '2db36ad12d673a9a7a2a973bdb7695526606e98698377d0db6e90b6ae9e89c2f94cd7df0987ef5baf1dd906b0e3dc86f3eb2a85135a86465ec1794158eef4039'
            '862918504ae7f05af830582492f387918d6be0be4036fa0b65765c97cbacfe637edf44a3e510fd042e077a226e447169cc28129f59c7175eacd82019eab45aa4'
            'e607eb2a937f6055ff1216377091f6e23858f94fbfe532089849f1558d8539700220500262f501bb9a4d4d61cfe32372aa2a4745a5cb630a49b23482eab36d4c'
            '77d80d50d8c4323ed36fd2097ba9f6b49bb8d7cae59d32ffa76b309758a7e9f972d26fedd77046d88ce2691bb01a07909f8bdc34ba214414be3bc030ee31994d'
            '071733a1cb3d2db8c004c2cb11b4dfa61ab42fed7eec48428653e495c000bc1a41af3f92054b26863f591228111192151b775d0a50b7c28e25a627126c99a5c8'
            'd6faa67f3ef40052152254ae43fee031365d0b1524aa0718b659eb75afc21a3f79ea8d62d66ea311a800109bed545bc8f79e8752319cd378eef2cbd3a09aba22'
            '2dc6b0ba8f7dbf19d2446c5c5f1823587de89f4e28e9595937dd51a87755099656f2acec50e3e2546ea633ad1bfd1c722e0c2b91eef1d609103d8abdc0a7cbaf'
            '1a2de50b0d82de6fd4c6763767c1bd14be10c2d268e24f8ef7662439729e899d49620ad4f2ede3b59ffbfd7ff819766d75f0b3a4f0f5c36460be7284d901072f'
            '6832097c84e036dd458df82d6cc05106083b3cf4984686fbaa8463eec2cad436738e14d6c229f7bdcfe74ef835305aed36f5a23b3ec256af5b9ace505fd39c6d')
